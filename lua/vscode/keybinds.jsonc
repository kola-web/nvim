[
  // emmet
  {
    "key": "cmd+e",
    "command": "workbench.action.showEmmetCommands"
  },
  // Explorer
  {
    "key": "enter",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "m",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "H",
    "command": "compareFiles",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s",
    "command": "selectForCompare",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": ">",
    "command": "workbench.action.moveSidePanelToPanel"
  },
  // {
  //   "key": "m",
  //   "command": "editor.action.showContextMenu",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  // },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "auxiliaryBarFocus && auxiliaryBarVisible"
  },
  // "command": "workbench.files.action.refreshFilesExplorer",
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "revealFileInOS",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "t",
    "command": "openInTerminal",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "u",
    "command": "copyFilePath",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "i",
    "command": "copyRelativeFilePath",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "v",
    "command": "list.toggleSelection",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  // Terminal
  {
    "key": "ctrl+m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // window focus
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'CommandlineInProgress' && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'CommandlineInProgress' && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'CommandlineInProgress' && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'CommandlineInProgress' && !inputFocus"
  },
  // changeCase
  {
    "key": "cmd+;",
    "command": "extension.changeCase.commands"
  },
  // focus
  {
    "key": "cmd+`",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+1",
    "command": "workbench.view.explorer"
  },
  {
    "key": "cmd+2",
    "command": "outline.focus"
  },
  {
    "key": "cmd+3",
    "command": "workbench.view.extension.project-manager"
  },
  {
    "key": "cmd+4",
    "command": "todo-tree-view.focus"
  },
  {
    "key": "cmd+5",
    "command": "workbench.view.extension.dockerView"
  },
  {
    "key": "cmd+6",
    "command": "copilotSidebar.explain.focus"
  },
  {
    "key": "cmd+9",
    "command": "workbench.view.scm"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  // 跳转对应html标签
  {
    "key": "ctrl+m",
    // "command": "editor.emmet.action.matchTag",
    "command": "extension.matchitJumpItems",
    "when": "editorTextFocus"
  },
  // 转换色值格式
  {
    "key": "cmd+-",
    "command": "color-conversion.colorConversion",
    "when": "editorTextFocus && editorHasSelection"
  },
  // whichkey
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "vim.mode != 'Insert' && !inputFocus && !auxiliaryBarFocus"
  },
  {
    "key": "e",
    "command": "whichkey.triggerKey",
    "args": {
      "key": "e",
      "when": "sideBarVisible && explorerViewletVisible"
    },
    "when": "whichkeyVisible && sideBarVisible && explorerViewletVisible"
  },
  {
    "key": "ctrl+h",
    "command": "whichkey.searchBindings",
    "when": "whichkeyVisible"
  },
  // 编辑器大小
  {
    "key": "shift+ctrl+0",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.decreaseViewHeight"
  },
  {
    "key": "ctrl+up",
    "command": "workbench.action.increaseViewHeight"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.increaseViewWidth"
  },
  // markdown
  {
    "key": "shift+cmd+t",
    "command": "-extension.varTranslation"
  },
  // nav buffer
  {
    "key": "tab",
    "command": "workbench.action.nextEditor",
    "when": "vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && !panelFocus"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.previousEditor",
    "when": "vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && !panelFocus"
  },
  // {
  //   "key": "tab",
  //   "command": "markdown.extension.onTabKey",
  //   "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode =='Insert'"
  // },
  // {
  //   "key": "tab",
  //   "command": "-markdown.extension.onTabKey",
  //   "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  // },
  {
    "key": "shift+tab",
    "command": "-markdown.extension.onShiftTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  // 左右移动tab
  {
    "key": "shift+9",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && !panelFocus && editorFocus"
  },
  {
    "key": "shift+0",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "vim.mode != 'Insert' && vim.mode != 'CommandlineInProgress' && !panelFocus && editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "breadcrumbs.focusNextWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+h",
    "command": "breadcrumbs.focusPreviousWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  // ctrl+k inherit ctrl+p
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  // ctrl+j inherit ctrl+n
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  // console plugin
  {
    "key": "shift+cmd+t",
    "command": "-js-console.insertConsoleTable",
    "when": "editorLangId == 'html' || editorLangId == 'javascriptreact' || editorLangId == 'typescript' || editorLangId == 'typescriptreact' || editorLangId == 'vue' || editorTextFocus && editorLangId == 'javascript'"
  },
  {
    "key": "shift+cmd+w",
    "command": "-js-console.insertConsoleWarn",
    "when": "editorLangId == 'html' || editorLangId == 'javascriptreact' || editorLangId == 'typescript' || editorLangId == 'typescriptreact' || editorLangId == 'vue' || editorTextFocus && editorLangId == 'javascript'"
  },
  {
    "key": "shift+cmd+e",
    "command": "-js-console.insertConsoleError",
    "when": "editorLangId == 'html' || editorLangId == 'javascriptreact' || editorLangId == 'typescript' || editorLangId == 'typescriptreact' || editorLangId == 'vue' || editorTextFocus && editorLangId == 'javascript'"
  },
  // focus
  {
    "key": "Escape",
    "command": "workbench.action.blur",
    "when": "inputFocus && !editorTextFocus && !findWidgetVisible"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusFirstSideEditor",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusSecondSideEditor",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+cmd+t",
    "command": "-js-console.insertConsoleTable",
    "when": "editorLangId == 'html' || editorLangId == 'javascriptreact' || editorLangId == 'svelte' || editorLangId == 'typescript' || editorLangId == 'typescriptreact' || editorLangId == 'vue' || editorTextFocus && editorLangId == 'javascript'"
  },
]

