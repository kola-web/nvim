local function has_words_before()
  local line, col = unpack(vim.api.nvim_win_get_cursor(0))
  return col ~= 0 and vim.api.nvim_buf_get_lines(0, line - 1, line, true)[1]:sub(col, col):match('%s') == nil
end

local M = {
  -- {
  --   'saghen/blink.cmp',
  --   lazy = false, -- lazy loading handled internally
  --   -- optional: provides snippets for the snippet source
  --   dependencies = {
  --     'rafamadriz/friendly-snippets',
  --     'mikavilpas/blink-ripgrep.nvim',
  --   },
  --
  --   -- use a release tag to download pre-built binaries
  --   version = 'v0.*',
  --   -- OR build from source, requires nightly: https://rust-lang.github.io/rustup/concepts/channels.html#working-with-nightly-rust
  --   -- build = 'cargo build --release',
  --   -- If you use nix, you can build from source using latest nightly rust with:
  --   -- build = 'nix run .#build-plugin',
  --
  --   opts = {
  --     -- 'default' for mappings similar to built-in completion
  --     -- 'super-tab' for mappings similar to vscode (tab to accept, arrow keys to navigate)
  --     -- 'enter' for mappings similar to 'super-tab' but with 'enter' to accept
  --     -- see the "default configuration" section below for full documentation on how to define
  --     -- your own keymap.
  --     keymap = {
  --       preset = 'super-tab',
  --       --   ['<Tab>'] = { 'snippet_forward', 'fallback' },
  --       ['<Tab>'] = {
  --         function(cmp)
  --           -- print(vim.inspect(cmp))
  --           if cmp.snippet_active() then
  --             return cmp.accept()
  --           else
  --             return cmp.select_and_accept()
  --           end
  --         end,
  --         function()
  --           if has_words_before() then
  --             vim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes('<Plug>(emmet-expand-abbr)', true, true, true), 'i', true)
  --             return 'fallback'
  --           end
  --         end,
  --         'snippet_forward',
  --         'fallback',
  --       },
  --     },
  --
  --     appearance = {
  --       -- Sets the fallback highlight groups to nvim-cmp's highlight groups
  --       -- Useful for when your theme doesn't support blink.cmp
  --       -- will be removed in a future release
  --       use_nvim_cmp_as_default = true,
  --       -- Set to 'mono' for 'Nerd Font Mono' or 'normal' for 'Nerd Font'
  --       -- Adjusts spacing to ensure icons are aligned
  --       nerd_font_variant = 'mono',
  --     },
  --     completion = {
  --       accept = {
  --         -- experimental auto-brackets support
  --         auto_brackets = {
  --           enabled = true,
  --         },
  --       },
  --       menu = {
  --         draw = {
  --           treesitter = true,
  --         },
  --       },
  --       documentation = {
  --         auto_show = true,
  --         auto_show_delay_ms = 200,
  --       },
  --       ghost_text = {
  --         enabled = vim.g.ai_cmp,
  --       },
  --       trigger = {
  --         show_in_snippet = false,
  --       },
  --     },
  --
  --     -- default list of enabled providers defined so that you can extend it
  --     -- elsewhere in your config, without redefining it, via `opts_extend`
  --     sources = {
  --       default = {
  --         'lsp',
  --         'path',
  --         'snippets',
  --         'buffer',
  --         'ripgrep', -- üëàüèª add "ripgrep" here
  --       },
  --       -- optionally disable cmdline completions
  --       -- cmdline = {},
  --     },
  --
  --     -- experimental signature help support
  --     -- signature = { enabled = true }
  --   },
  --   -- allows extending the providers array elsewhere in your config
  --   -- without having to redefine it
  --   opts_extend = { 'sources.default' },
  -- },
  -- {
  --   'saghen/blink.cmp',
  --   opts = function(_, opts)
  --     opts.appearance = opts.appearance or {}
  --     opts.appearance.kind_icons = require('utils.icons').kinds
  --   end,
  -- },
  -- {
  --   'saghen/blink.cmp',
  --   opts = {
  --     sources = {
  --       -- add lazydev to your completion providers
  --       default = { 'lazydev' },
  --       providers = {
  --         lazydev = {
  --           name = 'LazyDev',
  --           module = 'lazydev.integrations.blink',
  --         },
  --       },
  --     },
  --   },
  -- },
}

return M
